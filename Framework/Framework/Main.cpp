// ** Framework v0.4.1

#define _CRT_SECURE_NO_WARNINGS
#include "Parent.h"
#include "Child.h"
#include "Bullet.h"

// ** 11. 포인터 (복습) & 캡슐화.
/*
	1. * 데이터, & 주소반환 연산자
	2. 포인터 변수라면 [동적 할당]
	3. [.] 아니면 [->]로 접근

	4. [동적 할당] 했다면 반드시 [할당 해제] = 메모리 누수 방지

	C, C++은 수동으로 지워줘야한다.

	JAVA, C#은 쓰레기통이 존재해서 자동으로 버려진다.
	단, 쓰레기통이 가득찰 때 삭제하기 때문에 런타임 도중에 렉이 발생할 수 있다.
	관리자에 명령을 내려 삭제할 수 있으나, 불필요한 순간에 삭제 명령이 이루어질 수 있다.
*/

int main(void)
{
	

	return 0;
}

